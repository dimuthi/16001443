/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.CourseWorkController;
import Controller.FacultyController;
import Controller.SemesterController;
import Controller.SubjectController;
import DTO.CourseWorkDTO;
import DTO.FacultyDTO;
import DTO.SemesterDTO;
import DTO.SubjectDTO;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import utilities.CustomizeTable;
import utilities.CustomizeTableHeader;

/**
 *
 * @author dimut
 */
public class CourseWork extends javax.swing.JPanel {
    
    private static CourseWork courseWork;
    private DefaultTableModel mdlCourseWork;
    private int facultyLoadCount;
    private int semesterLoadCount;
    private int subjectCodesLoadCount;
    private int courseWorkTypeLoad;
    private int courseWorkLoad;

    /**
     * Creates new form CourseWork
     */
    private CourseWork() {
        initComponents();
        this.setSize(2270, 1140);
        mdlCourseWork = (DefaultTableModel) tblCourseWork.getModel();
        tblCourseWork.removeColumn(tblCourseWork.getColumnModel().getColumn(1));
        AutoCompleteDecorator.decorate(cmbSemester);
        AutoCompleteDecorator.decorate(cmbCourseWorkType);
        AutoCompleteDecorator.decorate(cmbFaculty);
        AutoCompleteDecorator.decorate(cmbSubCode);
        customizeTable();
    }
    
    public static CourseWork getInstance() {
        if (courseWork == null) {
            courseWork = new CourseWork();
        }
        return courseWork;
    }
    
    public void setInitialStage() {
        loadFaculties();
        loadSemesters();
        loadSubjectCodes();
        setSubjectName();
        loadCourseWorkTypes();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        cmbCourseWorkType = new javax.swing.JComboBox<String>();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbSubCode = new javax.swing.JComboBox<String>();
        cmbFaculty = new javax.swing.JComboBox<String>();
        jLabel5 = new javax.swing.JLabel();
        cmbSemester = new javax.swing.JComboBox();
        lblSubjectName = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pneCourseWork = new javax.swing.JScrollPane();
        tblCourseWork = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtCourseWorkName = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jLabel6.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel6.setText("COURSE WORK TYPE");
        add(jLabel6);
        jLabel6.setBounds(1130, 60, 290, 40);

        cmbCourseWorkType.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        cmbCourseWorkType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCourseWorkTypeItemStateChanged(evt);
            }
        });
        add(cmbCourseWorkType);
        cmbCourseWorkType.setBounds(1510, 60, 350, 40);

        jLabel3.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel3.setText("FACULTY");
        add(jLabel3);
        jLabel3.setBounds(40, 50, 207, 40);

        jLabel10.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel10.setText("SUBJECT CODE");
        add(jLabel10);
        jLabel10.setBounds(40, 210, 207, 40);

        cmbSubCode.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        cmbSubCode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSubCodeItemStateChanged(evt);
            }
        });
        cmbSubCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSubCodeActionPerformed(evt);
            }
        });
        add(cmbSubCode);
        cmbSubCode.setBounds(420, 210, 320, 40);

        cmbFaculty.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        cmbFaculty.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFacultyItemStateChanged(evt);
            }
        });
        cmbFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFacultyActionPerformed(evt);
            }
        });
        add(cmbFaculty);
        cmbFaculty.setBounds(420, 50, 510, 40);

        jLabel5.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel5.setText("SEMESTER");
        add(jLabel5);
        jLabel5.setBounds(1140, 210, 207, 40);

        cmbSemester.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        cmbSemester.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSemesterItemStateChanged(evt);
            }
        });
        add(cmbSemester);
        cmbSemester.setBounds(1510, 210, 340, 40);

        lblSubjectName.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        add(lblSubjectName);
        lblSubjectName.setBounds(420, 380, 390, 40);

        jLabel7.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel7.setText("COURSE WORK NAME");
        add(jLabel7);
        jLabel7.setBounds(1140, 370, 290, 40);

        tblCourseWork.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Work", "Coursework Id"
            }
        ));
        tblCourseWork.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCourseWorkMouseClicked(evt);
            }
        });
        pneCourseWork.setViewportView(tblCourseWork);

        add(pneCourseWork);
        pneCourseWork.setBounds(30, 662, 2220, 460);

        btnSave.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave);
        btnSave.setBounds(1530, 580, 180, 50);

        btnUpdate.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate);
        btnUpdate.setBounds(1750, 580, 200, 50);

        btnDelete.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(1980, 580, 200, 50);

        jLabel8.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel8.setText("SUBJECT NAME");
        add(jLabel8);
        jLabel8.setBounds(40, 380, 207, 40);

        txtCourseWorkName.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        add(txtCourseWorkName);
        txtCourseWorkName.setBounds(1510, 370, 310, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCourseWorkTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCourseWorkTypeItemStateChanged
        if (courseWorkTypeLoad > 0) {
            loadTable();
        }
    }//GEN-LAST:event_cmbCourseWorkTypeItemStateChanged

    private void cmbSubCodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSubCodeItemStateChanged
        if (subjectCodesLoadCount > 0) {
            setSubjectName();
            loadTable();
        }
    }//GEN-LAST:event_cmbSubCodeItemStateChanged

    private void cmbFacultyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFacultyItemStateChanged
        if (facultyLoadCount > 0) {
            loadSubjectCodes();
            loadTable();
        }
    }//GEN-LAST:event_cmbFacultyItemStateChanged

    private void cmbSemesterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSemesterItemStateChanged
        if (semesterLoadCount > 0) {
            loadSubjectCodes();
            loadTable();
        }
    }//GEN-LAST:event_cmbSemesterItemStateChanged

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            CourseWorkDTO courseWorkDTO = new CourseWorkDTO();
            courseWorkDTO.setSubjectId(cmbSubCode.getSelectedItem().toString());
            courseWorkDTO.setCourseWorkTypeId(CourseWorkController.getCourseWorkTypeId(cmbCourseWorkType.getSelectedItem().toString()).getCourseWorkTypeId());
            courseWorkDTO.setCourseWorkName(txtCourseWorkName.getText());
            boolean addCourseWork = CourseWorkController.addCourseWork(courseWorkDTO);
            if(addCourseWork){
                loadTable();
            }
            else{
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception ex) {
            Logger.getLogger(CourseWork.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            if (tblCourseWork.getSelectedRow() > -1) {
                CourseWorkDTO courseWorkDTO = new CourseWorkDTO();
                courseWorkDTO.setSubjectId(cmbSubCode.getSelectedItem().toString());
                courseWorkDTO.setCourseWorkTypeId(CourseWorkController.getCourseWorkTypeId(cmbCourseWorkType.getSelectedItem().toString()).getCourseWorkTypeId());
                courseWorkDTO.setCourseWorkName(txtCourseWorkName.getText());
                courseWorkDTO.setCourseWorkId(Integer.parseInt(tblCourseWork.getModel().getValueAt(tblCourseWork.getSelectedRow(), 1).toString()));
                boolean updateCourseWork = CourseWorkController.updateCourseWork(courseWorkDTO);
                if (updateCourseWork) {
                    loadTable();
                }
                else{
                JOptionPane.showMessageDialog(this, "Error");
            }
            }
        } catch (Exception ex) {
            Logger.getLogger(CourseWork.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            if (tblCourseWork.getSelectedRow() > -1) {
                boolean deleteCourseWork = CourseWorkController.deleteCourseWork(Integer.parseInt(tblCourseWork.getModel().getValueAt(tblCourseWork.getSelectedRow(), 1).toString()));
                if (deleteCourseWork) {
                    loadTable();
                }
                else{
                JOptionPane.showMessageDialog(this, "Error");
            }
            }
        } catch (Exception ex) {
            Logger.getLogger(CourseWork.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblCourseWorkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCourseWorkMouseClicked
        txtCourseWorkName.setText(tblCourseWork.getValueAt(tblCourseWork.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblCourseWorkMouseClicked

    private void cmbSubCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSubCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubCodeActionPerformed

    private void cmbFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFacultyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbFacultyActionPerformed
    
    /*Load data to table using course work type id and subject id*/
    private void loadTable() {
        try {
            mdlCourseWork.setRowCount(0);
            CourseWorkDTO courseWork = new CourseWorkDTO();
            courseWork.setCourseWorkTypeId(CourseWorkController.getCourseWorkTypeId(cmbCourseWorkType.getSelectedItem().toString()).getCourseWorkTypeId());
            courseWork.setSubjectId(cmbSubCode.getSelectedItem().toString());
            ArrayList<CourseWorkDTO> allCourseWorksWithIdViaSubject = CourseWorkController.getAllCourseWorksWithIdViaSubject(courseWork);
            for (CourseWorkDTO courseWorkDTO : allCourseWorksWithIdViaSubject) {
                Object[] ob = {courseWorkDTO.getCourseWorkName(), courseWorkDTO.getCourseWorkId()};
                mdlCourseWork.addRow(ob);
            }
        } catch (Exception ex) {
            Logger.getLogger(CourseWork.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /*Load faculties to combo box*/
    private void loadFaculties() {
        try {
            facultyLoadCount = 0;
            ArrayList<FacultyDTO> allFaculties = FacultyController.getAllFaculties();
            cmbFaculty.removeAllItems();
            for (FacultyDTO faculty : allFaculties) {
                cmbFaculty.addItem(faculty.getFacultyName());
            }
            facultyLoadCount++;
        } catch (Exception ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /*Load semesters to combo box*/
    private void loadSemesters() {
        try {
            semesterLoadCount = 0;
            ArrayList<SemesterDTO> semesterDTOs = SemesterController.getAllSemesters();
            cmbSemester.removeAllItems();
            for (SemesterDTO semesterDTO : semesterDTOs) {
                cmbSemester.addItem(semesterDTO.getSemesterName());
            }
            semesterLoadCount++;
        } catch (Exception ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /*Set subject name according to subject code while changing subject code in combo box*/
    private void setSubjectName() {
        try {
            String subjectName = "";
            if (cmbSubCode.getSelectedItem() != null) {
                subjectName = SubjectController.getRelaventSubjectNameViaCode(cmbSubCode.getSelectedItem().toString()).getSubjectName();
            } else {
                subjectName = "";
            }
            lblSubjectName.setText(subjectName);
        } catch (Exception ex) {
            Logger.getLogger(SemesterRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /*Load subject codes to combo box using faculty id and semster id*/
    private void loadSubjectCodes() {
        try {
            subjectCodesLoadCount = 0;
            SubjectDTO subjectDTO = new SubjectDTO();
            subjectDTO.setFacultyId(FacultyController.getFacultyId(cmbFaculty.getSelectedItem().toString()).getFacultyId());
            subjectDTO.setSemesterid(SemesterController.getSemesterId(cmbSemester.getSelectedItem().toString()).getSemesterid());
            ArrayList<SubjectDTO> relaventSubjects = SubjectController.getRelaventSubjectCodes(subjectDTO);
            cmbSubCode.removeAllItems();
            for (SubjectDTO relaventSubject : relaventSubjects) {
                cmbSubCode.addItem(relaventSubject.getSubjectName());
            }
            subjectCodesLoadCount++;
            setSubjectName();
        } catch (Exception ex) {
            Logger.getLogger(SemesterRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /*Load course work types*/
    private void loadCourseWorkTypes() {
        try {
            courseWorkTypeLoad = 0;
            ArrayList<CourseWorkDTO> allCourseWorksTypes = CourseWorkController.getAllCourseWorksTypes();
            cmbCourseWorkType.removeAllItems();
            for (CourseWorkDTO courseWorksType : allCourseWorksTypes) {
                cmbCourseWorkType.addItem(courseWorksType.getCourseWorkType());
            }
            courseWorkTypeLoad++;
        } catch (Exception ex) {
            Logger.getLogger(Results.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /*Customize Table*/
    private void customizeTable() {
        tblCourseWork.setDefaultRenderer(Object.class, new CustomizeTable());
        tblCourseWork.getTableHeader().setDefaultRenderer(new CustomizeTableHeader());
        tblCourseWork.setRowHeight(30);
        tblCourseWork.setShowGrid(true);
        tblCourseWork.setFont(new Font("", 0, 18));
        pneCourseWork.getViewport().setBackground(Color.WHITE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbCourseWorkType;
    private javax.swing.JComboBox<String> cmbFaculty;
    private javax.swing.JComboBox cmbSemester;
    private javax.swing.JComboBox<String> cmbSubCode;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblSubjectName;
    private javax.swing.JScrollPane pneCourseWork;
    private javax.swing.JTable tblCourseWork;
    private javax.swing.JTextField txtCourseWorkName;
    // End of variables declaration//GEN-END:variables
}
