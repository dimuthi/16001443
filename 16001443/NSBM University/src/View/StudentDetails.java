/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.StudentController;
import DTO.StudentDTO;
import java.awt.Color;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import utilities.CustomizeTable;
import utilities.CustomizeTableHeader;

/**
 *
 * @author dimut
 */
public class StudentDetails extends javax.swing.JPanel {

    private static StudentDetails studentDetails;
    private DefaultTableModel studenttablemodel;

    /**
     * Creates new form StudentRegistration
     */
    private StudentDetails() {
        initComponents();
        setSize(2270, 1140);
        AutoCompleteDecorator.decorate(cmbgender);
        customizeStudentsTable();
        studenttablemodel = (DefaultTableModel) tblStudents.getModel();
        loadTable();

    }

    public static StudentDetails getInstance() {
        if (studentDetails == null) {
            studentDetails = new StudentDetails();
        }
        return studentDetails;
    }

    public void setInitialStage() {
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioBtnGroup = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtlastname = new javax.swing.JTextField();
        txtfirstname = new javax.swing.JTextField();
        txtstuid = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtbirthday = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cmbgender = new javax.swing.JComboBox();
        txtTelephone = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pneStudents = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();
        updatebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(2206, 1035));
        setLayout(null);

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel2.setText("FIRST NAME");
        add(jLabel2);
        jLabel2.setBounds(40, 180, 200, 40);

        jLabel3.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel3.setText("ADDRESS");
        add(jLabel3);
        jLabel3.setBounds(870, 70, 200, 40);

        jLabel4.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel4.setText("LAST NAME");
        add(jLabel4);
        jLabel4.setBounds(40, 290, 200, 40);

        jLabel5.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel5.setText("BIRTHDAY");
        add(jLabel5);
        jLabel5.setBounds(870, 200, 200, 40);

        jLabel7.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel7.setText("E-MAIL");
        add(jLabel7);
        jLabel7.setBounds(40, 420, 200, 40);

        txtaddress.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        txtaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddressActionPerformed(evt);
            }
        });
        add(txtaddress);
        txtaddress.setBounds(1190, 70, 370, 40);

        txtemail.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });
        txtemail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtemailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtemailKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtemailKeyTyped(evt);
            }
        });
        add(txtemail);
        txtemail.setBounds(300, 410, 370, 40);

        txtlastname.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        txtlastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlastnameActionPerformed(evt);
            }
        });
        add(txtlastname);
        txtlastname.setBounds(300, 290, 370, 40);

        txtfirstname.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        add(txtfirstname);
        txtfirstname.setBounds(300, 180, 360, 40);

        txtstuid.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        add(txtstuid);
        txtstuid.setBounds(300, 70, 340, 40);

        jLabel11.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel11.setText("STUDENT ID");
        add(jLabel11);
        jLabel11.setBounds(40, 70, 200, 40);

        txtbirthday.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        txtbirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbirthdayActionPerformed(evt);
            }
        });
        add(txtbirthday);
        txtbirthday.setBounds(1190, 200, 370, 40);

        jLabel13.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel13.setText("GENDER");
        add(jLabel13);
        jLabel13.setBounds(1780, 100, 150, 40);

        cmbgender.setBackground(new java.awt.Color(240, 240, 240));
        cmbgender.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        cmbgender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MALE", "FEMALE" }));
        cmbgender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbgenderActionPerformed(evt);
            }
        });
        add(cmbgender);
        cmbgender.setBounds(2030, 100, 170, 40);

        txtTelephone.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        txtTelephone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelephoneKeyReleased(evt);
            }
        });
        add(txtTelephone);
        txtTelephone.setBounds(1190, 320, 370, 40);

        jLabel8.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        jLabel8.setText("TELEPHONE");
        add(jLabel8);
        jLabel8.setBounds(870, 320, 190, 40);

        btnSave.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave);
        btnSave.setBounds(1370, 560, 222, 49);

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        jLabel1.setText("S");
        add(jLabel1);
        jLabel1.setBounds(270, 70, 15, 40);

        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "First Name", "Last Name", "Address", "Date Of Birth", "Email", "Telephone"
            }
        ));
        tblStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentsMouseClicked(evt);
            }
        });
        pneStudents.setViewportView(tblStudents);

        add(pneStudents);
        pneStudents.setBounds(20, 642, 2230, 470);

        updatebtn.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });
        add(updatebtn);
        updatebtn.setBounds(1650, 560, 222, 49);

        deletebtn.setFont(new java.awt.Font("Bookman Old Style", 1, 22)); // NOI18N
        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        add(deletebtn);
        deletebtn.setBounds(1920, 560, 222, 49);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel6.setText("(xxx-xxxxxxx)");
        add(jLabel6);
        jLabel6.setBounds(1320, 380, 210, 16);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setText("            (YYYY-MM-DD)");
        add(jLabel9);
        jLabel9.setBounds(1260, 250, 210, 19);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbgenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbgenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbgenderActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String dob=txtbirthday.getText();
        if(!isValidDate(dob)){
            JOptionPane.showMessageDialog(this, "Invalid Birthday");
            return;
        }
        
       /* if(!emailValidate(txtemail)){
            JOptionPane.showMessageDialog(this, "Invalid Email Address");
            return;
        }*/
        if (isNotBlank()) {
            StudentDTO studentDTO = new StudentDTO();
            studentDTO.setStudentID("S"+txtstuid.getText());
            studentDTO.setFirstName(txtfirstname.getText());
            studentDTO.setLastName(txtlastname.getText());
            studentDTO.setAddress(txtaddress.getText());
            studentDTO.setGender(cmbgender.getSelectedItem().toString());
            studentDTO.setbOD(txtbirthday.getText());
            studentDTO.setTelephone(txtTelephone.getText());
            studentDTO.setEmail(txtemail.getText());
            try {
                boolean addStudent=StudentController.addStudent(studentDTO);
                if(addStudent){
                    loadTable();
                    clearFields();
                }else{
                    JOptionPane.showMessageDialog(this, "Error");
                }
                
            } catch (Exception ex) {
                Logger.getLogger(StudentDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void txtaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaddressActionPerformed

    private void txtlastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlastnameActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        String dob=txtbirthday.getText();
        if(!isValidDate(dob)){
            JOptionPane.showMessageDialog(this, "Invalid Birthday");
            return;
        }
        StudentDTO studentDTO=new StudentDTO();
        studentDTO.setStudentID("S"+txtstuid.getText());
        studentDTO.setFirstName(txtfirstname.getText());
        studentDTO.setLastName(txtlastname.getText());
        studentDTO.setAddress(txtaddress.getText());
        studentDTO.setEmail(txtemail.getText());
        studentDTO.setGender(cmbgender.getSelectedItem().toString());
        studentDTO.setbOD(txtbirthday.getText());
        studentDTO.setTelephone(txtTelephone.getText());
        boolean updateStudent;
        try {
            updateStudent = StudentController.updateStudent(studentDTO);
            if(updateStudent){
                loadTable();
                clearFields();
            }else{
                JOptionPane.showMessageDialog(this, "Error");
            }
        
        } catch (Exception ex) {
            Logger.getLogger(StudentDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_updatebtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        if(tblStudents.getSelectedRow()>-1){
        boolean deletestudent;
        try {
            deletestudent = StudentController.deleteStudent(tblStudents.getValueAt(tblStudents.getSelectedRow(), 0).toString());
            if (deletestudent) {
                loadTable();
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } catch (Exception ex) {
            Logger.getLogger(StudentDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
      
    }//GEN-LAST:event_deletebtnActionPerformed

    private void txtbirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbirthdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbirthdayActionPerformed

    private void tblStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentsMouseClicked
      setDataToFields();
    }//GEN-LAST:event_tblStudentsMouseClicked

    private void txtemailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtemailKeyTyped
       
    }//GEN-LAST:event_txtemailKeyTyped

    private void txtemailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtemailKeyPressed
       
    }//GEN-LAST:event_txtemailKeyPressed

    private void txtemailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtemailKeyReleased
        // TODO add your handling code here:
         emailValidate(txtemail);
    }//GEN-LAST:event_txtemailKeyReleased

    private void txtTelephoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelephoneKeyReleased
        validatePhoneNumber(txtTelephone);
    }//GEN-LAST:event_txtTelephoneKeyReleased

    private void loadTable()  {
        studenttablemodel.setRowCount(0);
        ArrayList<StudentDTO> allStudent;
        try {
            allStudent = StudentController.getAllStudents();
            for(StudentDTO stu:allStudent){
            Object ob[]={stu.getStudentID(),stu.getFirstName(),stu.getLastName(),stu.getAddress(),stu.getbOD(),stu.getEmail(),stu.getTelephone()};
            studenttablemodel.addRow(ob);
        }
        } catch (Exception ex) {
            Logger.getLogger(StudentDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    private void clearFields(){
        txtstuid.setText(null);
        txtaddress.setText(null);
        txtbirthday.setText(null);
        txtemail.setText(null);
        txtfirstname.setText(null);
        txtlastname.setText(null);
        txtTelephone.setText(null);
    }
    private void setDataToFields(){
        String str=tblStudents.getValueAt(tblStudents.getSelectedRow(), 0).toString();
        txtstuid.setText(str.substring(1));
        txtfirstname.setText(tblStudents.getValueAt(tblStudents.getSelectedRow(), 1).toString());
        txtlastname.setText(tblStudents.getValueAt(tblStudents.getSelectedRow(), 2).toString());
        txtaddress.setText(tblStudents.getValueAt(tblStudents.getSelectedRow(), 3).toString());
        txtbirthday.setText(tblStudents.getValueAt(tblStudents.getSelectedRow(), 4).toString());
        txtemail.setText(tblStudents.getValueAt(tblStudents.getSelectedRow(), 5).toString());
        txtTelephone.setText(tblStudents.getValueAt(tblStudents.getSelectedRow(), 6).toString());
        
        
    }

    private boolean isNotBlank() {
        if(!txtstuid.getText().equals("")){
            return true;
    }
        else return false;
    }

    private void customizeStudentsTable() {
        tblStudents.setDefaultRenderer(Object.class, new CustomizeTable());
        tblStudents.getTableHeader().setDefaultRenderer(new CustomizeTableHeader());
        tblStudents.setRowHeight(30);
        tblStudents.setShowGrid(true);
        tblStudents.setFont(new Font("", 0, 18));
        pneStudents.getViewport().setBackground(Color.WHITE);
    }
    private boolean isValidDate(String date) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date parsedDate = sdf.parse(date);
            
            if (parsedDate.before(new Date())){
                return true;
            }
            
            return false;
        } catch (ParseException ex) {
            return false;
        }
    }
    
       public  void emailValidate(JTextField textField) {
        String text = textField.getText();
        int caretPosition = textField.getCaretPosition();
        if (!text.matches("^[a-z]([a-z0-9]+\\.)*[a-z0-9]+@[a-z0-9]+([a-z0-9]+\\.)*(\\.[a-z0-9]+)+$")) {
            //textField.setText(textField.getText().substring(0, textField.getText ().length() - 1));
            textField.setForeground(Color.red);
        }else{
            textField.setForeground(Color.black);
        }
    }
         public  void validatePhoneNumber(JTextField textField) {
        String text = textField.getText();
        if (!text.matches("\\d{3}\\-\\d{7}")) {
            textField.setForeground(Color.red);
        }else{
            textField.setForeground(Color.black);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbgender;
    private javax.swing.JButton deletebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane pneStudents;
    private javax.swing.ButtonGroup radioBtnGroup;
    private javax.swing.JTable tblStudents;
    private javax.swing.JTextField txtTelephone;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtbirthday;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtfirstname;
    private javax.swing.JTextField txtlastname;
    private javax.swing.JTextField txtstuid;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables

}
